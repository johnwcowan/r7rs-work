== WG2 Input Docket ==

This docket contains work items that need to be voted on for possible inclusion into R7RS-large.  See [[:WG2Dockets|WG2Dockets]] for other dockets.

Applicable record instances (see http://www.r6rs.org/formal-comments/comment-6.txt):

`cond` `=>` with guard as well as generator (see #89):  [[http://srfi.schemers.org/srfi-61/srfi-61.html|SRFI 61]]

`cond` `=>` passes multiple values from predicate to consumer:

Combinators: CombinatorsCowan

Concatenation:  ConcatenateCowan

Custom I/O ports: [[http://www.r6rs.org/final/html/r6rs-lib/r6rs-lib-Z-H-9.html|R6RS]]

Default exception handler controls:

Descriptive statistics:  TallyCowan

Generalized `equal`: GeneralizedEqualCowan

Evaluator arguments to procedures like `load`: #277

Extended exact numbers:  ExtendedRationalsCowan

External representation of records: 

Features, allowing libraries to add:

Futures:  [[http://docs.racket-lang.org/reference/futures.html|Racket API]]

`hex-digit-value`:

Identifier-syntax: [[http://www.r6rs.org/final/html/r6rs/r6rs-Z-H-14.html#node_sec_11.19|R6RS]]

`if` with arbitrarily many arguments: [[http://dpk.io/r7rs/naryif-20130406|David Kendal's rationale]]

R6RS versions of `real?`, `rational?`, `integer?`: these are false if the imaginary part is an inexact zero; the issue here is what to name them to avoid confusion

Immutable data: ImmutableData

Interrupts, timers, signals: 

Jiffy cleanup: [[http://arcanesentiment.blogspot.com/2012/07/current-jiffy-is-not-usable-portably.html|Arcane Sentiment blog post]]

List library (supplementary):  ListsCowan

Macro expander(s) available at run time: 

`make-error-object` constructs error object without raising it: 

Multiple values passed through => in `cond`: #90 

`number->string` variant with control for significant digits: [[http://lists.scheme-reports.org/pipermail/scheme-reports/2011-May/000709.html|Vincent Manis proposal]], R6RS

`number->string` and `string->number` with non-ASCII decimal digits: NumberStringUnicode

Port encodings, buffering, line ending control:  SettingsListsCowan and FilesAdvancedCowan

Port type detector: #177

Queues:  [[http://wiki.call-cc.org/man/4/Unit%20data-structures#queues|Chicken API]], BinaryHeapsCowan

R6RS compatibility: whole libraries or cherry-picked procedures:

Raw strings:  <<, """...""", [[http://srfi.schemers.org/srfi-109/srfi-109.html|SRFI 109]]

Record external representations: 

Search and mismatch procedures:  SearchMismatchCowan

`standard-*-port` routines:  [[http://www.r6rs.org/final/html/r6rs-lib/r6rs-lib-Z-H-9.html|R6RS]]

String positions and slices (see http://www.r6rs.org/formal-comments/comment-235.txt):

Symbol library:  SymbolsCowan

Tree library: at least `tree=?` and `tree-copy`, probably Common Lisp [[http://www.lispworks.com/documentation/lw50/CLHS/Body/f_sublis.htm|SUBLIS and NSUBLIS]], fold, unfold, map ... 

Thread-local storage: 

Undefined value API: #49

Unquote with multiple arguments:  see #123

User-specified syntax-transformers: