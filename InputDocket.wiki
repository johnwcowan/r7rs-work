== WG2 Input Docket ==

This docket contains work items that need to be voted on for possible inclusion into R7RS-large.  See [[:WG2Dockets|WG2Dockets]] for other dockets.

Custom I/O ports: [[http://www.r6rs.org/final/html/r6rs-lib/r6rs-lib-Z-H-9.html|R6RS]]

Default exception handler controls:

External representation of records: 

Features, allowing libraries to add:

Identifier-syntax: [[http://www.r6rs.org/final/html/r6rs/r6rs-Z-H-14.html#node_sec_11.19|R6RS]]

R6RS versions of `real?`, `rational?`, `integer?`: these are false if the imaginary part is an inexact zero; the issue here is what to name them to avoid confusion

Immutable data: ImmutableData

Interrupts, timers, signals: 

Jiffy cleanup: [[http://arcanesentiment.blogspot.com/2012/07/current-jiffy-is-not-usable-portably.html|Arcane Sentiment blog post]]

Macro expander(s) available at run time: 

`number->string` variant with control for significant digits: [[http://lists.scheme-reports.org/pipermail/scheme-reports/2011-May/000709.html|Vincent Manis proposal]], R6RS

`number->string` and `string->number` with non-ASCII decimal digits: NumberStringUnicode

Observable objects: [[http://docs.oracle.com/javase/6/docs/api/java/util/Observable.html#clearChanged()|Java]]

Port type detector: see #177

R6RS compatibility: whole libraries or cherry-picked procedures:

Record external representations: 

`standard-*-port` routines:  [[http://www.r6rs.org/final/html/r6rs-lib/r6rs-lib-Z-H-9.html|R6RS]]

Streams:  [[http://srfi.schemers.org/srfi-41/srfi-41.html|SRFI 41]]

String positions and slices: [[http://www.r6rs.org/formal-comments/comment-235.txt|R6RS formal comment]]

Tree library: at least `tree=?` and `tree-copy`, probably Common Lisp [[http://www.lispworks.com/documentation/lw50/CLHS/Body/f_sublis.htm|SUBLIS and NSUBLIS]], fold, unfold, map ... 

Thread-local storage: 

Unquote with multiple arguments:  see #123

User-specified syntax-transformers: